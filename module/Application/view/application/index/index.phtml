<div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
        </div>
        <div class="navbar-collapse collapse">
          <form class="navbar-form navbar-right" action="/login" method="post" accept-charset="UTF-8">
            <div class="form-group">
              <input type="text" placeholder="Mind or Email" class="form-control" name="nameoremail">
            </div>
            <div class="form-group">
              <input type="password" placeholder="Password" class="form-control" name="password">
            </div>
            <button type="submit" class="btn btn-success">Sign in</button>
          </form>
        </div><!--/.navbar-collapse -->
      </div>
    </div>

<div class="jumbotron">
       
    <div class="container">
      <!-- Example row of columns -->
      <div class="row">
        <div class="col-md-8">
			<h1><?php echo sprintf($this->translate('Welcome to the meteo of your mind'), '<span class="zf-green">', '</span>') ?></h1>
  			<p><?php echo sprintf($this->translate('More coming soon!!!')) ?></p>
        </div>
        <div class="col-md-4">
        <?php echo $this->partial('partials/quickRegistration', ['form' => $form]); ?>
        </div>
      </div>
	</div>
</div>

<script>
$(document).ready(function() {
    $('#quickRegistrationForm').bootstrapValidator({
    	feedbackIcons: {
            valid: 'glyphicon glyphicon-ok',
            invalid: 'glyphicon glyphicon-remove',
            validating: 'glyphicon glyphicon-refresh'
        },
        fields: {
            name: {
                message: 'The mind name is not valid',
                validators: {
                    // The validator will create an Ajax request
                    // sending { username: 'its value' } to the back-end
                    remote: {
                        message: 'The mindname is not available',
                        url: '/api/validate-mind-name'
                    },
        			notEmpty: {
            			message: 'The mind name is required'
        			},
        			stringLength: {
                        max: 10,
                        message: 'The mind name must be less than 10 characters'
                    },
                    regexp: {
                        regexp: /^[a-zA-Z0-9-]+$/i,
                        message: 'The mind name can consist of alphanumerical characters and dash only'
                    }
                }
            },
	        email: {
	            message: 'The mind email is not valid',
	            validators: {
	                // The validator will create an Ajax request
	                // sending { username: 'its value' } to the back-end
	                remote: {
	                    message: 'The mind email is already used by another mind',
	                    url: '/api/validate-mind-email'
	                },
	                emailAddress: {
                        message: 'The value is not a valid email address'
	                },
	    			notEmpty: {
	        			message: 'The mind email is required'
	    			}
	            }
	        },
	        password: {
                validators: {
                    notEmpty: {
                        message: 'The password is required and cannot be empty'
                    },
                    different: {
                        field: 'name',
                        message: 'The password cannot be the same as mindname'
                    },
                    stringLength: {
                        min: 8,
                        message: 'The password must have at least 8 characters'
                    }
                }
            },
        }
    });
});
</script>