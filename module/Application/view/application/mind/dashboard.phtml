<!-- Le styles -->
 <?php echo $this->headLink()
 				->prependStylesheet('/css/morris.css')
 				->prependStylesheet('/css/slider.css')
 				->prependStylesheet($this->basePath() . '/btvalidator/dist/css/bootstrapValidator.min.css')
 			//	->prependStylesheet('//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap-responsive.min.css')
 ?>

<!-- Scripts -->
<?php echo $this->headScript()
				->prependFile('/js/jscroll/jquery.jscroll.min.js')
        		->prependFile('/js/raphael-min.js')
				->prependFile('/js/morris.min.js')
				->prependFile('/js/bootstrap-slider.js')
				->prependFile($this->basePath() . '/btvalidator/dist/js/bootstrapValidator.min.js');
?>

<!-- Sensor Modal -->
<div style="display: none;" id="sensormodal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="sensorModalLabel" aria-hidden="true">
	<div class="modal-dialog">
      <div class="modal-content">

      </div><!-- /.modal-content -->
	</div><!-- /.modal-dialog -->
</div>

<!-- Sensor Modal -->
<div style="display: none;" id="measurementmodal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="measurementModalLabel" aria-hidden="true">
	<div class="modal-dialog">
      <div class="modal-content">

      </div><!-- /.modal-content -->
	</div><!-- /.modal-dialog -->
</div>

<div class="navbar-wrapper">
	<div class="container">
		<div class="navbar navbar-default navbar-fixed-top" role="navigation">
		  <div class="container">
		    <!-- Brand and toggle get grouped for better mobile display -->
		    <div class="navbar-header">
		      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
		        <span class="sr-only">Toggle navigation</span>
		        <span class="icon-bar"></span>
		        <span class="icon-bar"></span>
		        <span class="icon-bar"></span>
		      </button>
		      <a class="brand" href="/"></a>
		    </div>
		
		    <!-- Collect the nav links, forms, and other content for toggling -->
		    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
		      <form class="navbar-form navbar-left" role="search">
		        <div class="form-group">
		          <input type="text" class="form-control" placeholder="Search">
		        </div>
		        <button type="submit" class="btn btn-meteo">Submit</button>
		      </form>
		      <ul class="nav navbar-nav navbar-right">
		      <li class="dropdown">
		          <a href="#" class="dropdown-toggle" data-toggle="dropdown">Contribute <span class="caret"></span></a>
		          <ul class="dropdown-menu" role="menu">
		            <li><a href="<?php echo $this->mind->getName() . '/add-sensor-and-samples' ?>" data-toggle="modal" data-target="#sensormodal" id="sensor-contribution-button">Send us a new sensor</a></li>
		            <li><a href="#">Send us a new weather analyse</a></li>
		          </ul>
		        </li>
		        <li>
		          <a href="<?php echo $this->mind->getName() . '/measure' ?>" class="glyphicon glyphicon-map-marker tooltip-link" data-toggle="modal" data-target="#measurementmodal" data-placement="left" title="Record meteo data of your mind"></a>
		        </li>
		        <li>
		          <a href="<?php echo $this->mind->getName() . '/publish' ?>" class="glyphicon glyphicon-envelope tooltip-link" data-toggle="tooltip" data-placement="left" title="Generate a weather report of your mind"></a>
		        </li>
		        <li>
		          <a href="/logout" class="glyphicon glyphicon-log-out"></a>
		        </li>
		      </ul>
		      
		      	
		      
		    </div><!-- /.navbar-collapse -->
		  </div><!-- /.container-fluid -->
		</div>
	</div>
</div>

<div class="container">
	<div class="row">
	    <div class="col-md-3">
	        <a href="<?php echo $this->mind->getName() . '/account' ?>">
	        	<img alt="" height="230" width="230" src="/img/icons/placeholder.png">
	        </a>
			<br><br>
			<table class="table">
				<tr>
					<h4 id="mindname"><?php echo $this->mind->getName() ?>	</h4>
				</tr>
				<tr>
					<td>
						<span class="glyphicon glyphicon-time"></span>
						<span>Joined on </span>
						<time datetime="2014-03-18T13:23:44Z" day="numeric" is="local-time" month="short" year="numeric">Mar 18, 2014</time>
					</td>
				</tr>
				<tr>
					<td>
						<div class="row">
						<div class="col-md-2">
					    	<p><span class="badge">42</span></p>
					    	<p><span class="badge">2</span></p>
					    	<p><span class="badge">203</span></p>
					    </div>
					    <div class="col-md-10">
					    	<p>Questions answered </p>
					    	<p>Sunny days </p>
					    	<p>Rainny days </p>
					    </div>
					</div>
					</td>
				</tr>
				
			</table>
	    </div>
	    
	    <div class="col-md-9">
		     <ul id="myTab" class="nav nav-tabs nav-justified" role="tablist">
		      <li class="active"><a href="#climat" role="tab" data-toggle="tab">Climat</a></li>
		      <li class=""><a href="#reports" role="tab" data-toggle="tab">Reports</a></li>
		      <li class=""><a href="#data" role="tab" data-toggle="tab">Measurements</a></li>
		      <li class=""><a href="#alerts" role="tab" data-toggle="tab">Alerts</a></li>
		      <li class=""><a href="#friends" role="tab" data-toggle="tab">Similar minds</a></li>
		    </ul>
		    <div id="myTabContent" class="tab-content">
		      <div class="tab-pane fade active in" id="climat">
					<div id="myfirstchart" style="height: 400px;"></div>
		      </div>
		      <div class="tab-pane fade" id="reports">
				<?php echo $this->partial('partials/reports-list'); ?>
		      </div>
		      <div class="tab-pane fade" id="data">
		      	<p>meteo raw data questions already answered (with answer and date)</p>
		      </div>
		       <div class="tab-pane fade" id="alerts">
		      	<p>List of marking events, or events to come in the agenda (big party, date, pay day...)</p>
		      	<p>(storms, take a day off: great sun)</p>
		      </div>
		      <div class="tab-pane fade" id="friends">
		      	<p>friends (following the same meteo trends) Similar meteo systems</p>
		      </div>
		    </div>
      	</div>
	</div>   
</div>

<script>
$(document).ready(function() {
	$( ".jscroll-inner" ).on( "click", ".accordion-toggle", function() {
		$(this).find("span").toggleClass('glyphicon-chevron-down glyphicon-chevron-up');
	});

	$( ".jscroll-inner" ).on( "mouseover", ".item", function() {
		$(this).css("background-color","#f2f1f0");
	});

	$( ".jscroll-inner" ).on( "mouseout", ".item", function() {
		$(this).css("background-color","white");
	});

	$('[data-ui="jscroll-default"]').jscroll({
		autoTrigger: false,
		debug: false,
		});

	new Morris.Line({
		  // ID of the element in which to draw the chart.
		  element: 'myfirstchart',
		  // Chart data records -- each entry in this array corresponds to a point on
		  // the chart.
		  data: [
		    { days: '2008', love: 20, health: 2, money: -5 },
		    { days: '2009', love: 10, health: 10, money: 5  },
		    { days: '2010', love: 5, health: 15, money: 10 },
		    { days: '2011', love: 5, health: -10, money: -15  },
		    { days: '2012', love: 20, health: 0, money: 0  }
		  ],
		  // The name of the data record attribute that contains x-values.
		  xkey: 'days',
		  // A list of names of data record attributes that contain y-values.
		  ykeys: ['love', 'health', 'money'],
		  // Labels for the ykeys -- will be displayed when you hover over the
		  // chart.
		  labels: ['Love', 'Health', 'Money']
		});

	//Destroy modal content after hiding
	$('body').on('hidden.bs.modal', '.modal', function () {
	    $(this).removeData('bs.modal').find(".modal-content").empty();
	});

	//record the sample 
	$( "#measurementmodal" ).on( "click", ".btn-meteo", function() {
		$('.btn-meteo').attr('disabled', 'disabled');
		$('.btn-default').attr('disabled', 'disabled');
        $.ajax({
            type: "GET",
            url: $("#mindname").text()+'/record/'+$(this).find('.sensorid').val()+'/'+$(this).find('.sampleid').val(), 
            cache: false,
            //data: $('form.sensor').serialize(),
            success: function(msg){
            	$("#measurementmodal").find('.modal-content').html(msg);
            	$('.btn-meteo').removeAttr("disabled");
            	$('.btn-default').removeAttr("disabled");
            },
            error: function(xhr, status, error) {
            	 $("#measurementmodal").find('#errormsg').html(xhr.responseText);
            	 $('.btn-meteo').removeAttr("disabled");
            	 $('.btn-default').removeAttr("disabled");
            }
        });
	});

	//Activate the slider when the modal "sensor is loaded	
	$('body').on('loaded.bs.modal', '#sensormodal', function() {
		$(this).find('.slider').slider({ value : 0});

		$('form.sensor').bootstrapValidator({
			//submitButtons: 'input[name="submitsensor"]',
			submitHandler: function(validator, form, submitButton) {
				$.ajax({
			    	type: 'POST',
			        url: $("#mindname").text()+"/add-sensor-and-samples", 
			        data: $(form).serialize(),
			        success: function(msg){
			           	$("#sensormodal").find('.modal-content').html(msg);
			        },
			        error: function(xhr, status, error) {
			           	 $("#sensormodal").find('#errormsg').html(xhr.responseText);
			           	 $('#submitsensor').removeAttr("disabled");
			        }
			    });
			    return false;
 			},
	    	feedbackIcons: {
	            valid: 'glyphicon glyphicon-ok',
	            invalid: 'glyphicon glyphicon-remove',
	            validating: 'glyphicon glyphicon-refresh'
	        },
	        fields: {
	        	label: {
	                message: 'The test of the sensor is not valid',
	                validators: {
	        			notEmpty: {
	            			message: 'Your test is required'
	        			},
	        			stringLength: {
	                        max: 128,
	                        message: 'Your test must be less than 128 characters'
	                    },
	                }
	            },
	            topic: {
	            	message: 'The topic of the sensor is not valid',
	                validators: {
		            	callback: {
							message : 'You should choose a topic',	
		                    callback: function(value, validator) {
			                    if (value == 'unpicked')
				                    return false;
			                    else
				                    return true;
		                    }
	                    },
	                }
		        },
		        answerPositive: {
		        	message: 'The positive sample is not valid',
	                validators: {
	                	notEmpty: {
	            			message: 'Your positive sample is required'
	        			},
	        			stringLength: {
	                        max: 32,
	                        message: 'Your positive sample must be less than 32 characters'
	                    },
	                    different: {
	                         field: 'answerNegative',
	                         message: "The negative and negative sample can't be the same"
	                     },
	                }
			    },
			    answerNegative: {
		        	message: 'The negative sample is not valid',
	                validators: {
	                	notEmpty: {
	            			message: 'Your negative sample is required'
	        			},
	        			stringLength: {
	                        max: 32,
	                        message: 'Your negative sample must be less than 32 characters'
	                    },
	                    different: {
	                         field: 'answerPositive',
	                         message: "The positive and negative sample can't be the same"
	                     },
	                }
			    },
			/*    answerPositiveValue: {
		        	message: 'The positive sample value is not valid',
	                validators: {
	                	 different: {
	                         field: 'answerNegativeValue',
	                         message: "The positive and negative sample can't have the same value"
	                     },
	                }
			    },
			    answerNegativeValue: {
		        	message: 'The negative sample value is not valid',
	                validators: {
	                	callback: {
							message : "The negative and positive sample can't have the same value",	
		                    callback: function(value, validator) {
			                    alert(value);
			                    if (value == $("#answerPositiveValue").getValue())
				                    return false;
			                    else
				                    return true;
		                    }
	                    },
	                	 different: {
	                         field: 'answerPositiveValue',
	                         message: "The negative and positive sample can't have the same value"
	                     },
	                }
			    },*/
	        }
	    });
		
	});
});
</script>
 
  
    

